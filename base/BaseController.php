<?php
/**
 * Created by PhpStorm.
 * User: zorochen
 * Date: 2016/11/20
 * Time: 上午1:30
 */

namespace app\base;


use filsh\yii2\oauth2server\filters\ErrorToExceptionFilter;
use yii\filters\AccessControl;
use yii\filters\auth\CompositeAuth;
use yii\filters\auth\HttpBearerAuth;
use yii\filters\auth\QueryParamAuth;
use yii\filters\ContentNegotiator;
use yii\filters\RateLimiter;
use yii\filters\VerbFilter;
use yii\helpers\ArrayHelper;
use yii\rest\ActiveController;
use yii\web\ForbiddenHttpException;
use yii\web\Response;

class BaseController extends ActiveController
{

    public function behaviors()
    {
        return ArrayHelper::merge(parent::behaviors(), [
            'authenticator' => [
                'class' => CompositeAuth::className(),
                'authMethods' => [
                    ['class' => HttpBearerAuth::className()],
                    ['class' => QueryParamAuth::className(), 'tokenParam' => 'access_token'],
                ]
            ],
            'exceptionFilter' => [
                'class' => ErrorToExceptionFilter::className()
            ],
            'contentNegotiator' => [
                'class' => ContentNegotiator::className(),
                'except' => [],
                'formats' => [
                    'application/json' => Response::FORMAT_JSON,
                ],

            ],

            'verbFilter' => [
                    'class' => VerbFilter::className(),
                    'actions' => $this->verbs()
                ],
                'rateLimiter' => [
                    'class' => RateLimiter::className()
                ]
        ]);

        /*
        $behaviors['access'] = [
            'class' => AccessControl::className(),
            'only' => ['index','view','create','update'],
            'rules' => [
                [
                    'actions' => ['index','view','create','update'],
                    'allow' => true,
                    'roles' => ['@']
                 ]
            ]
        ];
        */


    }

    public function checkAccess($action, $model = null, $params = [])
    {
        /*
        if (\Yii::$app->user->getIsGuest()) {
            throw new ForbiddenHttpException();
        }
        */
        parent::checkAccess($action, $model, $params); // TODO: Change the autogenerated stub
    }

    public function actions()
    {
        return parent::actions(); // TODO: Change the autogenerated stub
    }

    /*
    public function afterAction($action, $result) {

        $result = [
            'code' 		=> 0,
            'message' 	=> 'success',
            'data' 		=> $result,
        ];

        return $result;
    }
    */
}